{"ast":null,"code":"var clone = require('./clone');\nmodule.exports = merge;\nfunction typesMatch(a, b) {\n  return typeof a === typeof b && Array.isArray(a) === Array.isArray(b);\n}\n\n/**\n * A deep merge of the source based on the target.\n * @param  {Object} source   [description]\n * @param  {Object} target   [description]\n * @return {Object}          [description]\n */\nfunction merge(source, target, result) {\n  if (result === undefined) {\n    result = clone(source);\n  }\n\n  // merge missing values from the target to the source\n  Object.getOwnPropertyNames(target).forEach(function (key) {\n    if (source[key] === undefined) {\n      result[key] = target[key];\n    }\n  });\n  Object.getOwnPropertyNames(source).forEach(function (key) {\n    var value = source[key];\n    if (target[key] && typesMatch(value, target[key])) {\n      // merge empty values\n      if (value === '') {\n        result[key] = target[key];\n      }\n      if (Array.isArray(value)) {\n        if (value.length === 0 && target[key].length) {\n          result[key] = target[key].slice(0);\n        }\n      } else if (typeof value === 'object') {\n        result[key] = merge(value, target[key]);\n      }\n    }\n  });\n  return result;\n}","map":{"version":3,"names":["clone","require","module","exports","merge","typesMatch","a","b","Array","isArray","source","target","result","undefined","Object","getOwnPropertyNames","forEach","key","value","length","slice"],"sources":["C:/Users/789bet/node_modules/nodemon/lib/utils/merge.js"],"sourcesContent":["var clone = require('./clone');\n\nmodule.exports = merge;\n\nfunction typesMatch(a, b) {\n  return (typeof a === typeof b) && (Array.isArray(a) === Array.isArray(b));\n}\n\n/**\n * A deep merge of the source based on the target.\n * @param  {Object} source   [description]\n * @param  {Object} target   [description]\n * @return {Object}          [description]\n */\nfunction merge(source, target, result) {\n  if (result === undefined) {\n    result = clone(source);\n  }\n\n  // merge missing values from the target to the source\n  Object.getOwnPropertyNames(target).forEach(function (key) {\n    if (source[key] === undefined) {\n      result[key] = target[key];\n    }\n  });\n\n  Object.getOwnPropertyNames(source).forEach(function (key) {\n    var value = source[key];\n\n    if (target[key] && typesMatch(value, target[key])) {\n      // merge empty values\n      if (value === '') {\n        result[key] = target[key];\n      }\n\n      if (Array.isArray(value)) {\n        if (value.length === 0 && target[key].length) {\n          result[key] = target[key].slice(0);\n        }\n      } else if (typeof value === 'object') {\n        result[key] = merge(value, target[key]);\n      }\n    }\n  });\n\n  return result;\n}"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE9BC,MAAM,CAACC,OAAO,GAAGC,KAAK;AAEtB,SAASC,UAAU,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,OAAQ,OAAOD,CAAC,KAAK,OAAOC,CAAC,IAAMC,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,KAAKE,KAAK,CAACC,OAAO,CAACF,CAAC,CAAE;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,KAAK,CAACM,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACrC,IAAIA,MAAM,KAAKC,SAAS,EAAE;IACxBD,MAAM,GAAGZ,KAAK,CAACU,MAAM,CAAC;EACxB;;EAEA;EACAI,MAAM,CAACC,mBAAmB,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAC,UAAUC,GAAG,EAAE;IACxD,IAAIP,MAAM,CAACO,GAAG,CAAC,KAAKJ,SAAS,EAAE;MAC7BD,MAAM,CAACK,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC;IAC3B;EACF,CAAC,CAAC;EAEFH,MAAM,CAACC,mBAAmB,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,UAAUC,GAAG,EAAE;IACxD,IAAIC,KAAK,GAAGR,MAAM,CAACO,GAAG,CAAC;IAEvB,IAAIN,MAAM,CAACM,GAAG,CAAC,IAAIZ,UAAU,CAACa,KAAK,EAAEP,MAAM,CAACM,GAAG,CAAC,CAAC,EAAE;MACjD;MACA,IAAIC,KAAK,KAAK,EAAE,EAAE;QAChBN,MAAM,CAACK,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC;MAC3B;MAEA,IAAIT,KAAK,CAACC,OAAO,CAACS,KAAK,CAAC,EAAE;QACxB,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,IAAIR,MAAM,CAACM,GAAG,CAAC,CAACE,MAAM,EAAE;UAC5CP,MAAM,CAACK,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;QACpC;MACF,CAAC,MAAM,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;QACpCN,MAAM,CAACK,GAAG,CAAC,GAAGb,KAAK,CAACc,KAAK,EAAEP,MAAM,CAACM,GAAG,CAAC,CAAC;MACzC;IACF;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf"},"metadata":{},"sourceType":"script"}