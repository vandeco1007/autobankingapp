{"ast":null,"code":"var debug = require('debug')('nodemon');\nvar path = require('path');\nvar monitor = require('./monitor');\nvar cli = require('./cli');\nvar version = require('./version');\nvar util = require('util');\nvar utils = require('./utils');\nvar bus = utils.bus;\nvar help = require('./help');\nvar config = require('./config');\nvar spawn = require('./spawn');\nconst defaults = require('./config/defaults');\nvar eventHandlers = {};\n\n// this is fairly dirty, but theoretically sound since it's part of the\n// stable module API\nconfig.required = utils.isRequired;\nfunction nodemon(settings) {\n  bus.emit('boot');\n  nodemon.reset();\n\n  // allow the cli string as the argument to nodemon, and allow for\n  // `node nodemon -V app.js` or just `-V app.js`\n  if (typeof settings === 'string') {\n    settings = settings.trim();\n    if (settings.indexOf('node') !== 0) {\n      if (settings.indexOf('nodemon') !== 0) {\n        settings = 'nodemon ' + settings;\n      }\n      settings = 'node ' + settings;\n    }\n    settings = cli.parse(settings);\n  }\n\n  // set the debug flag as early as possible to get all the detailed logging\n  if (settings.verbose) {\n    utils.debug = true;\n  }\n  if (settings.help) {\n    if (process.stdout.isTTY) {\n      process.stdout._handle.setBlocking(true); // nodejs/node#6456\n    }\n\n    console.log(help(settings.help));\n    if (!config.required) {\n      process.exit(0);\n    }\n  }\n  if (settings.version) {\n    version().then(function (v) {\n      console.log(v);\n      if (!config.required) {\n        process.exit(0);\n      }\n    });\n    return;\n  }\n\n  // nodemon tools like grunt-nodemon. This affects where\n  // the script is being run from, and will affect where\n  // nodemon looks for the nodemon.json files\n  if (settings.cwd) {\n    // this is protection to make sure we haven't dont the chdir already...\n    // say like in cli/parse.js (which is where we do this once already!)\n    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {\n      process.chdir(settings.cwd);\n    }\n  }\n  const cwd = process.cwd();\n  config.load(settings, function (config) {\n    if (!config.options.dump && !config.options.execOptions.script && config.options.execOptions.exec === 'node') {\n      if (!config.required) {\n        console.log(help('usage'));\n        process.exit();\n      }\n      return;\n    }\n\n    // before we print anything, update the colour setting on logging\n    utils.colours = config.options.colours;\n\n    // always echo out the current version\n    utils.log.info(version.pinned);\n    const cwd = process.cwd();\n    if (config.options.cwd) {\n      utils.log.detail('process root: ' + cwd);\n    }\n    config.loaded.map(file => file.replace(cwd, '.')).forEach(file => {\n      utils.log.detail('reading config ' + file);\n    });\n    if (config.options.stdin && config.options.restartable) {\n      // allow nodemon to restart when the use types 'rs\\n'\n      process.stdin.resume();\n      process.stdin.setEncoding('utf8');\n      process.stdin.on('data', data => {\n        const str = data.toString().trim().toLowerCase();\n\n        // if the keys entered match the restartable value, then restart!\n        if (str === config.options.restartable) {\n          bus.emit('restart');\n        } else if (data.charCodeAt(0) === 12) {\n          // ctrl+l\n          console.clear();\n        }\n      });\n    } else if (config.options.stdin) {\n      // so let's make sure we don't eat the key presses\n      // but also, since we're wrapping, watch out for\n      // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\n      var ctrlC = false;\n      var buffer = '';\n      process.stdin.on('data', function (data) {\n        data = data.toString();\n        buffer += data;\n        const chr = data.charCodeAt(0);\n\n        // if restartable, echo back\n        if (chr === 3) {\n          if (ctrlC) {\n            process.exit(0);\n          }\n          ctrlC = true;\n          return;\n        } else if (buffer === '.exit' || chr === 4) {\n          // ctrl+d\n          process.exit();\n        } else if (chr === 13 || chr === 10) {\n          // enter / carriage return\n          buffer = '';\n        } else if (chr === 12) {\n          // ctrl+l\n          console.clear();\n          buffer = '';\n        }\n        ctrlC = false;\n      });\n      if (process.stdin.setRawMode) {\n        process.stdin.setRawMode(true);\n      }\n    }\n    if (config.options.restartable) {\n      utils.log.info('to restart at any time, enter `' + config.options.restartable + '`');\n    }\n    if (!config.required) {\n      const restartSignal = config.options.signal === 'SIGUSR2' ? 'SIGHUP' : 'SIGUSR2';\n      process.on(restartSignal, nodemon.restart);\n      utils.bus.on('error', () => {\n        utils.log.fail(new Error().stack);\n      });\n      utils.log.detail((config.options.restartable ? 'or ' : '') + 'send ' + restartSignal + ' to ' + process.pid + ' to restart');\n    }\n    const ignoring = config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        return false;\n      }\n      rule = rule.slice(1);\n\n      // don't notify of default ignores\n      if (defaults.ignoreRoot.indexOf(rule) !== -1) {\n        return false;\n        return rule.slice(3).slice(0, -3);\n      }\n      if (rule.startsWith(cwd)) {\n        return rule.replace(cwd, '.');\n      }\n      return rule;\n    }).filter(Boolean).join(' ');\n    if (ignoring) utils.log.detail('ignoring: ' + ignoring);\n    utils.log.info('watching path(s): ' + config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        try {\n          rule = path.relative(process.cwd(), rule);\n        } catch (e) {}\n        return rule;\n      }\n      return false;\n    }).filter(Boolean).join(' '));\n    utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n    if (config.options.dump) {\n      utils.log._log('log', '--------------');\n      utils.log._log('log', 'node: ' + process.version);\n      utils.log._log('log', 'nodemon: ' + version.pinned);\n      utils.log._log('log', 'command: ' + process.argv.join(' '));\n      utils.log._log('log', 'cwd: ' + cwd);\n      utils.log._log('log', ['OS:', process.platform, process.arch].join(' '));\n      utils.log._log('log', '--------------');\n      utils.log._log('log', util.inspect(config, {\n        depth: null\n      }));\n      utils.log._log('log', '--------------');\n      if (!config.required) {\n        process.exit();\n      }\n      return;\n    }\n    config.run = true;\n    if (config.options.stdout === false) {\n      nodemon.on('start', function () {\n        nodemon.stdout = bus.stdout;\n        nodemon.stderr = bus.stderr;\n        bus.emit('readable');\n      });\n    }\n    if (config.options.events && Object.keys(config.options.events).length) {\n      Object.keys(config.options.events).forEach(function (key) {\n        utils.log.detail('bind ' + key + ' -> `' + config.options.events[key] + '`');\n        nodemon.on(key, function () {\n          if (config.options && config.options.events) {\n            spawn(config.options.events[key], config, [].slice.apply(arguments));\n          }\n        });\n      });\n    }\n    monitor.run(config.options);\n  });\n  return nodemon;\n}\nnodemon.restart = function () {\n  utils.log.status('restarting child process');\n  bus.emit('restart');\n  return nodemon;\n};\nnodemon.addListener = nodemon.on = function (event, handler) {\n  if (!eventHandlers[event]) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event].push(handler);\n  bus.on(event, handler);\n  return nodemon;\n};\nnodemon.once = function (event, handler) {\n  if (!eventHandlers[event]) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event].push(handler);\n  bus.once(event, function () {\n    debug('bus.once(%s)', event);\n    eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    handler.apply(this, arguments);\n  });\n  return nodemon;\n};\nnodemon.emit = function () {\n  bus.emit.apply(bus, [].slice.call(arguments));\n  return nodemon;\n};\nnodemon.removeAllListeners = function (event) {\n  // unbind only the `nodemon.on` event handlers\n  Object.keys(eventHandlers).filter(function (e) {\n    return event ? e === event : true;\n  }).forEach(function (event) {\n    eventHandlers[event].forEach(function (handler) {\n      bus.removeListener(event, handler);\n      eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    });\n  });\n  return nodemon;\n};\nnodemon.reset = function (done) {\n  bus.emit('reset', done);\n};\nbus.on('reset', function (done) {\n  debug('reset');\n  nodemon.removeAllListeners();\n  monitor.run.kill(true, function () {\n    utils.reset();\n    config.reset();\n    config.run = false;\n    if (done) {\n      done();\n    }\n  });\n});\n\n// expose the full config\nnodemon.config = config;\nmodule.exports = nodemon;","map":{"version":3,"names":["debug","require","path","monitor","cli","version","util","utils","bus","help","config","spawn","defaults","eventHandlers","required","isRequired","nodemon","settings","emit","reset","trim","indexOf","parse","verbose","process","stdout","isTTY","_handle","setBlocking","console","log","exit","then","v","cwd","resolve","system","chdir","load","options","dump","execOptions","script","exec","colours","info","pinned","detail","loaded","map","file","replace","forEach","stdin","restartable","resume","setEncoding","on","data","str","toString","toLowerCase","charCodeAt","clear","ctrlC","buffer","chr","setRawMode","restartSignal","signal","restart","fail","Error","stack","pid","ignoring","rule","slice","ignoreRoot","startsWith","filter","Boolean","join","relative","e","ext","_log","argv","platform","arch","inspect","depth","run","stderr","events","Object","keys","length","key","apply","arguments","status","addListener","event","handler","push","once","splice","call","removeAllListeners","removeListener","done","kill","module","exports"],"sources":["C:/Users/789bet/node_modules/nodemon/lib/nodemon.js"],"sourcesContent":["var debug = require('debug')('nodemon');\nvar path = require('path');\nvar monitor = require('./monitor');\nvar cli = require('./cli');\nvar version = require('./version');\nvar util = require('util');\nvar utils = require('./utils');\nvar bus = utils.bus;\nvar help = require('./help');\nvar config = require('./config');\nvar spawn = require('./spawn');\nconst defaults = require('./config/defaults')\nvar eventHandlers = {};\n\n// this is fairly dirty, but theoretically sound since it's part of the\n// stable module API\nconfig.required = utils.isRequired;\n\nfunction nodemon(settings) {\n  bus.emit('boot');\n  nodemon.reset();\n\n  // allow the cli string as the argument to nodemon, and allow for\n  // `node nodemon -V app.js` or just `-V app.js`\n  if (typeof settings === 'string') {\n    settings = settings.trim();\n    if (settings.indexOf('node') !== 0) {\n      if (settings.indexOf('nodemon') !== 0) {\n        settings = 'nodemon ' + settings;\n      }\n      settings = 'node ' + settings;\n    }\n    settings = cli.parse(settings);\n  }\n\n  // set the debug flag as early as possible to get all the detailed logging\n  if (settings.verbose) {\n    utils.debug = true;\n  }\n\n  if (settings.help) {\n    if (process.stdout.isTTY) {\n      process.stdout._handle.setBlocking(true); // nodejs/node#6456\n    }\n    console.log(help(settings.help));\n    if (!config.required) {\n      process.exit(0);\n    }\n  }\n\n  if (settings.version) {\n    version().then(function (v) {\n      console.log(v);\n      if (!config.required) {\n        process.exit(0);\n      }\n    });\n    return;\n  }\n\n  // nodemon tools like grunt-nodemon. This affects where\n  // the script is being run from, and will affect where\n  // nodemon looks for the nodemon.json files\n  if (settings.cwd) {\n    // this is protection to make sure we haven't dont the chdir already...\n    // say like in cli/parse.js (which is where we do this once already!)\n    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {\n      process.chdir(settings.cwd);\n    }\n  }\n\n  const cwd = process.cwd();\n\n  config.load(settings, function (config) {\n    if (!config.options.dump && !config.options.execOptions.script &&\n      config.options.execOptions.exec === 'node') {\n      if (!config.required) {\n        console.log(help('usage'));\n        process.exit();\n      }\n      return;\n    }\n\n    // before we print anything, update the colour setting on logging\n    utils.colours = config.options.colours;\n\n    // always echo out the current version\n    utils.log.info(version.pinned);\n\n    const cwd = process.cwd();\n\n    if (config.options.cwd) {\n      utils.log.detail('process root: ' + cwd);\n    }\n\n    config.loaded.map(file => file.replace(cwd, '.')).forEach(file => {\n      utils.log.detail('reading config ' + file);\n    });\n\n    if (config.options.stdin && config.options.restartable) {\n      // allow nodemon to restart when the use types 'rs\\n'\n      process.stdin.resume();\n      process.stdin.setEncoding('utf8');\n      process.stdin.on('data', data => {\n        const str = data.toString().trim().toLowerCase();\n\n        // if the keys entered match the restartable value, then restart!\n        if (str === config.options.restartable) {\n          bus.emit('restart');\n        } else if (data.charCodeAt(0) === 12) { // ctrl+l\n          console.clear();\n        }\n      });\n    } else if (config.options.stdin) {\n      // so let's make sure we don't eat the key presses\n      // but also, since we're wrapping, watch out for\n      // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\n      var ctrlC = false;\n      var buffer = '';\n\n      process.stdin.on('data', function (data) {\n        data = data.toString();\n        buffer += data;\n        const chr = data.charCodeAt(0);\n\n        // if restartable, echo back\n        if (chr === 3) {\n          if (ctrlC) {\n            process.exit(0);\n          }\n\n          ctrlC = true;\n          return;\n        } else if (buffer === '.exit' || chr === 4) { // ctrl+d\n          process.exit();\n        } else if (chr === 13 || chr === 10) { // enter / carriage return\n          buffer = '';\n        } else if (chr === 12) { // ctrl+l\n          console.clear();\n          buffer = '';\n        }\n        ctrlC = false;\n      });\n      if (process.stdin.setRawMode) {\n        process.stdin.setRawMode(true);\n      }\n    }\n\n    if (config.options.restartable) {\n      utils.log.info('to restart at any time, enter `' +\n        config.options.restartable + '`');\n    }\n\n    if (!config.required) {\n      const restartSignal = config.options.signal === 'SIGUSR2' ? 'SIGHUP' : 'SIGUSR2';\n      process.on(restartSignal, nodemon.restart);\n      utils.bus.on('error', () => {\n        utils.log.fail((new Error().stack));\n      });\n      utils.log.detail((config.options.restartable ? 'or ' : '') + 'send ' +\n        restartSignal + ' to ' + process.pid + ' to restart');\n    }\n\n    const ignoring = config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        return false;\n      }\n\n      rule = rule.slice(1);\n\n      // don't notify of default ignores\n      if (defaults.ignoreRoot.indexOf(rule) !== -1) {\n        return false;\n        return rule.slice(3).slice(0, -3);\n      }\n\n      if (rule.startsWith(cwd)) {\n        return rule.replace(cwd, '.');\n      }\n\n      return rule;\n    }).filter(Boolean).join(' ');\n    if (ignoring) utils.log.detail('ignoring: ' + ignoring);\n\n    utils.log.info('watching path(s): ' + config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        try {\n          rule = path.relative(process.cwd(), rule);\n        } catch (e) {}\n\n        return rule;\n      }\n\n      return false;\n    }).filter(Boolean).join(' '));\n\n    utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n\n    if (config.options.dump) {\n      utils.log._log('log', '--------------');\n      utils.log._log('log', 'node: ' + process.version);\n      utils.log._log('log', 'nodemon: ' + version.pinned);\n      utils.log._log('log', 'command: ' + process.argv.join(' '));\n      utils.log._log('log', 'cwd: ' + cwd);\n      utils.log._log('log', ['OS:', process.platform, process.arch].join(' '));\n      utils.log._log('log', '--------------');\n      utils.log._log('log', util.inspect(config, { depth: null }));\n      utils.log._log('log', '--------------');\n      if (!config.required) {\n        process.exit();\n      }\n\n      return;\n    }\n\n    config.run = true;\n\n    if (config.options.stdout === false) {\n      nodemon.on('start', function () {\n        nodemon.stdout = bus.stdout;\n        nodemon.stderr = bus.stderr;\n\n        bus.emit('readable');\n      });\n    }\n\n    if (config.options.events && Object.keys(config.options.events).length) {\n      Object.keys(config.options.events).forEach(function (key) {\n        utils.log.detail('bind ' + key + ' -> `' +\n          config.options.events[key] + '`');\n        nodemon.on(key, function () {\n          if (config.options && config.options.events) {\n            spawn(config.options.events[key], config,\n              [].slice.apply(arguments));\n          }\n        });\n      });\n    }\n\n    monitor.run(config.options);\n\n  });\n\n  return nodemon;\n}\n\nnodemon.restart = function () {\n  utils.log.status('restarting child process');\n  bus.emit('restart');\n  return nodemon;\n};\n\nnodemon.addListener = nodemon.on = function (event, handler) {\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\n  eventHandlers[event].push(handler);\n  bus.on(event, handler);\n  return nodemon;\n};\n\nnodemon.once = function (event, handler) {\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\n  eventHandlers[event].push(handler);\n  bus.once(event, function () {\n    debug('bus.once(%s)', event);\n    eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    handler.apply(this, arguments);\n  });\n  return nodemon;\n};\n\nnodemon.emit = function () {\n  bus.emit.apply(bus, [].slice.call(arguments));\n  return nodemon;\n};\n\nnodemon.removeAllListeners = function (event) {\n  // unbind only the `nodemon.on` event handlers\n  Object.keys(eventHandlers).filter(function (e) {\n    return event ? e === event : true;\n  }).forEach(function (event) {\n    eventHandlers[event].forEach(function (handler) {\n      bus.removeListener(event, handler);\n      eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    });\n  });\n\n  return nodemon;\n};\n\nnodemon.reset = function (done) {\n  bus.emit('reset', done);\n};\n\nbus.on('reset', function (done) {\n  debug('reset');\n  nodemon.removeAllListeners();\n  monitor.run.kill(true, function () {\n    utils.reset();\n    config.reset();\n    config.run = false;\n    if (done) {\n      done();\n    }\n  });\n});\n\n// expose the full config\nnodemon.config = config;\n\nmodule.exports = nodemon;\n\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;AACvC,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIG,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIM,KAAK,GAAGN,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIO,GAAG,GAAGD,KAAK,CAACC,GAAG;AACnB,IAAIC,IAAI,GAAGR,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIS,MAAM,GAAGT,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIU,KAAK,GAAGV,OAAO,CAAC,SAAS,CAAC;AAC9B,MAAMW,QAAQ,GAAGX,OAAO,CAAC,mBAAmB,CAAC;AAC7C,IAAIY,aAAa,GAAG,CAAC,CAAC;;AAEtB;AACA;AACAH,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,UAAU;AAElC,SAASC,OAAO,CAACC,QAAQ,EAAE;EACzBT,GAAG,CAACU,IAAI,CAAC,MAAM,CAAC;EAChBF,OAAO,CAACG,KAAK,EAAE;;EAEf;EACA;EACA,IAAI,OAAOF,QAAQ,KAAK,QAAQ,EAAE;IAChCA,QAAQ,GAAGA,QAAQ,CAACG,IAAI,EAAE;IAC1B,IAAIH,QAAQ,CAACI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;MAClC,IAAIJ,QAAQ,CAACI,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;QACrCJ,QAAQ,GAAG,UAAU,GAAGA,QAAQ;MAClC;MACAA,QAAQ,GAAG,OAAO,GAAGA,QAAQ;IAC/B;IACAA,QAAQ,GAAGb,GAAG,CAACkB,KAAK,CAACL,QAAQ,CAAC;EAChC;;EAEA;EACA,IAAIA,QAAQ,CAACM,OAAO,EAAE;IACpBhB,KAAK,CAACP,KAAK,GAAG,IAAI;EACpB;EAEA,IAAIiB,QAAQ,CAACR,IAAI,EAAE;IACjB,IAAIe,OAAO,CAACC,MAAM,CAACC,KAAK,EAAE;MACxBF,OAAO,CAACC,MAAM,CAACE,OAAO,CAACC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C;;IACAC,OAAO,CAACC,GAAG,CAACrB,IAAI,CAACQ,QAAQ,CAACR,IAAI,CAAC,CAAC;IAChC,IAAI,CAACC,MAAM,CAACI,QAAQ,EAAE;MACpBU,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;IACjB;EACF;EAEA,IAAId,QAAQ,CAACZ,OAAO,EAAE;IACpBA,OAAO,EAAE,CAAC2B,IAAI,CAAC,UAAUC,CAAC,EAAE;MAC1BJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;MACd,IAAI,CAACvB,MAAM,CAACI,QAAQ,EAAE;QACpBU,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC;IACF;EACF;;EAEA;EACA;EACA;EACA,IAAId,QAAQ,CAACiB,GAAG,EAAE;IAChB;IACA;IACA,IAAIV,OAAO,CAACU,GAAG,EAAE,KAAKhC,IAAI,CAACiC,OAAO,CAACzB,MAAM,CAAC0B,MAAM,CAACF,GAAG,EAAEjB,QAAQ,CAACiB,GAAG,CAAC,EAAE;MACnEV,OAAO,CAACa,KAAK,CAACpB,QAAQ,CAACiB,GAAG,CAAC;IAC7B;EACF;EAEA,MAAMA,GAAG,GAAGV,OAAO,CAACU,GAAG,EAAE;EAEzBxB,MAAM,CAAC4B,IAAI,CAACrB,QAAQ,EAAE,UAAUP,MAAM,EAAE;IACtC,IAAI,CAACA,MAAM,CAAC6B,OAAO,CAACC,IAAI,IAAI,CAAC9B,MAAM,CAAC6B,OAAO,CAACE,WAAW,CAACC,MAAM,IAC5DhC,MAAM,CAAC6B,OAAO,CAACE,WAAW,CAACE,IAAI,KAAK,MAAM,EAAE;MAC5C,IAAI,CAACjC,MAAM,CAACI,QAAQ,EAAE;QACpBe,OAAO,CAACC,GAAG,CAACrB,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1Be,OAAO,CAACO,IAAI,EAAE;MAChB;MACA;IACF;;IAEA;IACAxB,KAAK,CAACqC,OAAO,GAAGlC,MAAM,CAAC6B,OAAO,CAACK,OAAO;;IAEtC;IACArC,KAAK,CAACuB,GAAG,CAACe,IAAI,CAACxC,OAAO,CAACyC,MAAM,CAAC;IAE9B,MAAMZ,GAAG,GAAGV,OAAO,CAACU,GAAG,EAAE;IAEzB,IAAIxB,MAAM,CAAC6B,OAAO,CAACL,GAAG,EAAE;MACtB3B,KAAK,CAACuB,GAAG,CAACiB,MAAM,CAAC,gBAAgB,GAAGb,GAAG,CAAC;IAC1C;IAEAxB,MAAM,CAACsC,MAAM,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAACjB,GAAG,EAAE,GAAG,CAAC,CAAC,CAACkB,OAAO,CAACF,IAAI,IAAI;MAChE3C,KAAK,CAACuB,GAAG,CAACiB,MAAM,CAAC,iBAAiB,GAAGG,IAAI,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIxC,MAAM,CAAC6B,OAAO,CAACc,KAAK,IAAI3C,MAAM,CAAC6B,OAAO,CAACe,WAAW,EAAE;MACtD;MACA9B,OAAO,CAAC6B,KAAK,CAACE,MAAM,EAAE;MACtB/B,OAAO,CAAC6B,KAAK,CAACG,WAAW,CAAC,MAAM,CAAC;MACjChC,OAAO,CAAC6B,KAAK,CAACI,EAAE,CAAC,MAAM,EAAEC,IAAI,IAAI;QAC/B,MAAMC,GAAG,GAAGD,IAAI,CAACE,QAAQ,EAAE,CAACxC,IAAI,EAAE,CAACyC,WAAW,EAAE;;QAEhD;QACA,IAAIF,GAAG,KAAKjD,MAAM,CAAC6B,OAAO,CAACe,WAAW,EAAE;UACtC9C,GAAG,CAACU,IAAI,CAAC,SAAS,CAAC;QACrB,CAAC,MAAM,IAAIwC,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;UAAE;UACtCjC,OAAO,CAACkC,KAAK,EAAE;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIrD,MAAM,CAAC6B,OAAO,CAACc,KAAK,EAAE;MAC/B;MACA;MACA;MACA,IAAIW,KAAK,GAAG,KAAK;MACjB,IAAIC,MAAM,GAAG,EAAE;MAEfzC,OAAO,CAAC6B,KAAK,CAACI,EAAE,CAAC,MAAM,EAAE,UAAUC,IAAI,EAAE;QACvCA,IAAI,GAAGA,IAAI,CAACE,QAAQ,EAAE;QACtBK,MAAM,IAAIP,IAAI;QACd,MAAMQ,GAAG,GAAGR,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC;;QAE9B;QACA,IAAII,GAAG,KAAK,CAAC,EAAE;UACb,IAAIF,KAAK,EAAE;YACTxC,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;UACjB;UAEAiC,KAAK,GAAG,IAAI;UACZ;QACF,CAAC,MAAM,IAAIC,MAAM,KAAK,OAAO,IAAIC,GAAG,KAAK,CAAC,EAAE;UAAE;UAC5C1C,OAAO,CAACO,IAAI,EAAE;QAChB,CAAC,MAAM,IAAImC,GAAG,KAAK,EAAE,IAAIA,GAAG,KAAK,EAAE,EAAE;UAAE;UACrCD,MAAM,GAAG,EAAE;QACb,CAAC,MAAM,IAAIC,GAAG,KAAK,EAAE,EAAE;UAAE;UACvBrC,OAAO,CAACkC,KAAK,EAAE;UACfE,MAAM,GAAG,EAAE;QACb;QACAD,KAAK,GAAG,KAAK;MACf,CAAC,CAAC;MACF,IAAIxC,OAAO,CAAC6B,KAAK,CAACc,UAAU,EAAE;QAC5B3C,OAAO,CAAC6B,KAAK,CAACc,UAAU,CAAC,IAAI,CAAC;MAChC;IACF;IAEA,IAAIzD,MAAM,CAAC6B,OAAO,CAACe,WAAW,EAAE;MAC9B/C,KAAK,CAACuB,GAAG,CAACe,IAAI,CAAC,iCAAiC,GAC9CnC,MAAM,CAAC6B,OAAO,CAACe,WAAW,GAAG,GAAG,CAAC;IACrC;IAEA,IAAI,CAAC5C,MAAM,CAACI,QAAQ,EAAE;MACpB,MAAMsD,aAAa,GAAG1D,MAAM,CAAC6B,OAAO,CAAC8B,MAAM,KAAK,SAAS,GAAG,QAAQ,GAAG,SAAS;MAChF7C,OAAO,CAACiC,EAAE,CAACW,aAAa,EAAEpD,OAAO,CAACsD,OAAO,CAAC;MAC1C/D,KAAK,CAACC,GAAG,CAACiD,EAAE,CAAC,OAAO,EAAE,MAAM;QAC1BlD,KAAK,CAACuB,GAAG,CAACyC,IAAI,CAAE,IAAIC,KAAK,EAAE,CAACC,KAAK,CAAE;MACrC,CAAC,CAAC;MACFlE,KAAK,CAACuB,GAAG,CAACiB,MAAM,CAAC,CAACrC,MAAM,CAAC6B,OAAO,CAACe,WAAW,GAAG,KAAK,GAAG,EAAE,IAAI,OAAO,GAClEc,aAAa,GAAG,MAAM,GAAG5C,OAAO,CAACkD,GAAG,GAAG,aAAa,CAAC;IACzD;IAEA,MAAMC,QAAQ,GAAGjE,MAAM,CAAC6B,OAAO,CAACpC,OAAO,CAAC8C,GAAG,CAAC,UAAU2B,IAAI,EAAE;MAC1D,IAAIA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5B,OAAO,KAAK;MACd;MAEAD,IAAI,GAAGA,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;;MAEpB;MACA,IAAIjE,QAAQ,CAACkE,UAAU,CAACzD,OAAO,CAACuD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5C,OAAO,KAAK;QACZ,OAAOA,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACnC;MAEA,IAAID,IAAI,CAACG,UAAU,CAAC7C,GAAG,CAAC,EAAE;QACxB,OAAO0C,IAAI,CAACzB,OAAO,CAACjB,GAAG,EAAE,GAAG,CAAC;MAC/B;MAEA,OAAO0C,IAAI;IACb,CAAC,CAAC,CAACI,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC5B,IAAIP,QAAQ,EAAEpE,KAAK,CAACuB,GAAG,CAACiB,MAAM,CAAC,YAAY,GAAG4B,QAAQ,CAAC;IAEvDpE,KAAK,CAACuB,GAAG,CAACe,IAAI,CAAC,oBAAoB,GAAGnC,MAAM,CAAC6B,OAAO,CAACpC,OAAO,CAAC8C,GAAG,CAAC,UAAU2B,IAAI,EAAE;MAC/E,IAAIA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5B,IAAI;UACFD,IAAI,GAAG1E,IAAI,CAACiF,QAAQ,CAAC3D,OAAO,CAACU,GAAG,EAAE,EAAE0C,IAAI,CAAC;QAC3C,CAAC,CAAC,OAAOQ,CAAC,EAAE,CAAC;QAEb,OAAOR,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,CAACI,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7B3E,KAAK,CAACuB,GAAG,CAACe,IAAI,CAAC,uBAAuB,IAAInC,MAAM,CAAC6B,OAAO,CAACE,WAAW,CAAC4C,GAAG,IAAI,OAAO,CAAC,CAAC;IAErF,IAAI3E,MAAM,CAAC6B,OAAO,CAACC,IAAI,EAAE;MACvBjC,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC;MACvC/E,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,QAAQ,GAAG9D,OAAO,CAACnB,OAAO,CAAC;MACjDE,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,WAAW,GAAGjF,OAAO,CAACyC,MAAM,CAAC;MACnDvC,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,WAAW,GAAG9D,OAAO,CAAC+D,IAAI,CAACL,IAAI,CAAC,GAAG,CAAC,CAAC;MAC3D3E,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,OAAO,GAAGpD,GAAG,CAAC;MACpC3B,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE9D,OAAO,CAACgE,QAAQ,EAAEhE,OAAO,CAACiE,IAAI,CAAC,CAACP,IAAI,CAAC,GAAG,CAAC,CAAC;MACxE3E,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC;MACvC/E,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAEhF,IAAI,CAACoF,OAAO,CAAChF,MAAM,EAAE;QAAEiF,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;MAC5DpF,KAAK,CAACuB,GAAG,CAACwD,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC;MACvC,IAAI,CAAC5E,MAAM,CAACI,QAAQ,EAAE;QACpBU,OAAO,CAACO,IAAI,EAAE;MAChB;MAEA;IACF;IAEArB,MAAM,CAACkF,GAAG,GAAG,IAAI;IAEjB,IAAIlF,MAAM,CAAC6B,OAAO,CAACd,MAAM,KAAK,KAAK,EAAE;MACnCT,OAAO,CAACyC,EAAE,CAAC,OAAO,EAAE,YAAY;QAC9BzC,OAAO,CAACS,MAAM,GAAGjB,GAAG,CAACiB,MAAM;QAC3BT,OAAO,CAAC6E,MAAM,GAAGrF,GAAG,CAACqF,MAAM;QAE3BrF,GAAG,CAACU,IAAI,CAAC,UAAU,CAAC;MACtB,CAAC,CAAC;IACJ;IAEA,IAAIR,MAAM,CAAC6B,OAAO,CAACuD,MAAM,IAAIC,MAAM,CAACC,IAAI,CAACtF,MAAM,CAAC6B,OAAO,CAACuD,MAAM,CAAC,CAACG,MAAM,EAAE;MACtEF,MAAM,CAACC,IAAI,CAACtF,MAAM,CAAC6B,OAAO,CAACuD,MAAM,CAAC,CAAC1C,OAAO,CAAC,UAAU8C,GAAG,EAAE;QACxD3F,KAAK,CAACuB,GAAG,CAACiB,MAAM,CAAC,OAAO,GAAGmD,GAAG,GAAG,OAAO,GACtCxF,MAAM,CAAC6B,OAAO,CAACuD,MAAM,CAACI,GAAG,CAAC,GAAG,GAAG,CAAC;QACnClF,OAAO,CAACyC,EAAE,CAACyC,GAAG,EAAE,YAAY;UAC1B,IAAIxF,MAAM,CAAC6B,OAAO,IAAI7B,MAAM,CAAC6B,OAAO,CAACuD,MAAM,EAAE;YAC3CnF,KAAK,CAACD,MAAM,CAAC6B,OAAO,CAACuD,MAAM,CAACI,GAAG,CAAC,EAAExF,MAAM,EACtC,EAAE,CAACmE,KAAK,CAACsB,KAAK,CAACC,SAAS,CAAC,CAAC;UAC9B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEAjG,OAAO,CAACyF,GAAG,CAAClF,MAAM,CAAC6B,OAAO,CAAC;EAE7B,CAAC,CAAC;EAEF,OAAOvB,OAAO;AAChB;AAEAA,OAAO,CAACsD,OAAO,GAAG,YAAY;EAC5B/D,KAAK,CAACuB,GAAG,CAACuE,MAAM,CAAC,0BAA0B,CAAC;EAC5C7F,GAAG,CAACU,IAAI,CAAC,SAAS,CAAC;EACnB,OAAOF,OAAO;AAChB,CAAC;AAEDA,OAAO,CAACsF,WAAW,GAAGtF,OAAO,CAACyC,EAAE,GAAG,UAAU8C,KAAK,EAAEC,OAAO,EAAE;EAC3D,IAAI,CAAC3F,aAAa,CAAC0F,KAAK,CAAC,EAAE;IAAE1F,aAAa,CAAC0F,KAAK,CAAC,GAAG,EAAE;EAAE;EACxD1F,aAAa,CAAC0F,KAAK,CAAC,CAACE,IAAI,CAACD,OAAO,CAAC;EAClChG,GAAG,CAACiD,EAAE,CAAC8C,KAAK,EAAEC,OAAO,CAAC;EACtB,OAAOxF,OAAO;AAChB,CAAC;AAEDA,OAAO,CAAC0F,IAAI,GAAG,UAAUH,KAAK,EAAEC,OAAO,EAAE;EACvC,IAAI,CAAC3F,aAAa,CAAC0F,KAAK,CAAC,EAAE;IAAE1F,aAAa,CAAC0F,KAAK,CAAC,GAAG,EAAE;EAAE;EACxD1F,aAAa,CAAC0F,KAAK,CAAC,CAACE,IAAI,CAACD,OAAO,CAAC;EAClChG,GAAG,CAACkG,IAAI,CAACH,KAAK,EAAE,YAAY;IAC1BvG,KAAK,CAAC,cAAc,EAAEuG,KAAK,CAAC;IAC5B1F,aAAa,CAAC0F,KAAK,CAAC,CAACI,MAAM,CAAC9F,aAAa,CAAC0F,KAAK,CAAC,CAAClF,OAAO,CAACmF,OAAO,CAAC,EAAE,CAAC,CAAC;IACrEA,OAAO,CAACL,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAChC,CAAC,CAAC;EACF,OAAOpF,OAAO;AAChB,CAAC;AAEDA,OAAO,CAACE,IAAI,GAAG,YAAY;EACzBV,GAAG,CAACU,IAAI,CAACiF,KAAK,CAAC3F,GAAG,EAAE,EAAE,CAACqE,KAAK,CAAC+B,IAAI,CAACR,SAAS,CAAC,CAAC;EAC7C,OAAOpF,OAAO;AAChB,CAAC;AAEDA,OAAO,CAAC6F,kBAAkB,GAAG,UAAUN,KAAK,EAAE;EAC5C;EACAR,MAAM,CAACC,IAAI,CAACnF,aAAa,CAAC,CAACmE,MAAM,CAAC,UAAUI,CAAC,EAAE;IAC7C,OAAOmB,KAAK,GAAGnB,CAAC,KAAKmB,KAAK,GAAG,IAAI;EACnC,CAAC,CAAC,CAACnD,OAAO,CAAC,UAAUmD,KAAK,EAAE;IAC1B1F,aAAa,CAAC0F,KAAK,CAAC,CAACnD,OAAO,CAAC,UAAUoD,OAAO,EAAE;MAC9ChG,GAAG,CAACsG,cAAc,CAACP,KAAK,EAAEC,OAAO,CAAC;MAClC3F,aAAa,CAAC0F,KAAK,CAAC,CAACI,MAAM,CAAC9F,aAAa,CAAC0F,KAAK,CAAC,CAAClF,OAAO,CAACmF,OAAO,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOxF,OAAO;AAChB,CAAC;AAEDA,OAAO,CAACG,KAAK,GAAG,UAAU4F,IAAI,EAAE;EAC9BvG,GAAG,CAACU,IAAI,CAAC,OAAO,EAAE6F,IAAI,CAAC;AACzB,CAAC;AAEDvG,GAAG,CAACiD,EAAE,CAAC,OAAO,EAAE,UAAUsD,IAAI,EAAE;EAC9B/G,KAAK,CAAC,OAAO,CAAC;EACdgB,OAAO,CAAC6F,kBAAkB,EAAE;EAC5B1G,OAAO,CAACyF,GAAG,CAACoB,IAAI,CAAC,IAAI,EAAE,YAAY;IACjCzG,KAAK,CAACY,KAAK,EAAE;IACbT,MAAM,CAACS,KAAK,EAAE;IACdT,MAAM,CAACkF,GAAG,GAAG,KAAK;IAClB,IAAImB,IAAI,EAAE;MACRA,IAAI,EAAE;IACR;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA/F,OAAO,CAACN,MAAM,GAAGA,MAAM;AAEvBuG,MAAM,CAACC,OAAO,GAAGlG,OAAO"},"metadata":{},"sourceType":"script"}