{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetMoreOperation = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass GetMoreOperation extends operation_1.AbstractOperation {\n  constructor(ns, cursorId, server) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(options);\n    this.options = options;\n    // comment on getMore is only supported for server versions 4.4 and above\n    if ((0, utils_1.maxWireVersion)(server) < 9) {\n      delete this.options.comment;\n    }\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n    }\n    server.getMore(this.ns, this.cursorId, this.options, callback);\n  }\n}\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.CURSOR_ITERATING]);","map":{"version":3,"mappings":";;;;;;AACA;AAGA;AACA;AAmBA;AACA,MAAaA,gBAAiB,SAAQC,6BAAiB;EAIrDC,YAAYC,EAAoB,EAAEC,QAAc,EAAEC,MAAc,EAA8B;IAAA,IAA5BC,8EAA0B,EAAE;IAC5F,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB;IACA,IAAI,0BAAc,EAACD,MAAM,CAAC,GAAG,CAAC,EAAE;MAC9B,OAAO,IAAI,CAACC,OAAO,CAACC,OAAO;;IAG7B,IAAI,CAACJ,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EAEA;;;;EAISG,OAAO,CACdH,MAAc,EACdI,OAAkC,EAClCC,QAA4B;IAE5B,IAAIL,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MAC1B,OAAOK,QAAQ,CACb,IAAIC,yBAAiB,CAAC,wDAAwD,CAAC,CAChF;;IAEHN,MAAM,CAACO,OAAO,CAAC,IAAI,CAACT,EAAE,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACE,OAAO,EAAEI,QAAQ,CAAC;EAChE;;AAlCFG;AAqCA,6BAAa,EAACb,gBAAgB,EAAE,CAACC,kBAAM,CAACa,cAAc,EAAEb,kBAAM,CAACc,gBAAgB,CAAC,CAAC","names":["GetMoreOperation","operation_1","constructor","ns","cursorId","server","options","comment","execute","session","callback","error_1","getMore","exports","READ_OPERATION","CURSOR_ITERATING"],"sources":["C:\\Users\\789bet\\node_modules\\mongodb\\src\\operations\\get_more.ts"],"sourcesContent":["import type { Document, Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, maxWireVersion, MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, OperationOptions } from './operation';\n\n/**\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface GetMoreOptions extends OperationOptions {\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * getMore only supports 'comment' in server versions 4.4 and above.\n   */\n  comment?: unknown;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class GetMoreOperation extends AbstractOperation {\n  cursorId: Long;\n  override options: GetMoreOptions;\n\n  constructor(ns: MongoDBNamespace, cursorId: Long, server: Server, options: GetMoreOptions = {}) {\n    super(options);\n\n    this.options = options;\n\n    // comment on getMore is only supported for server versions 4.4 and above\n    if (maxWireVersion(server) < 9) {\n      delete this.options.comment;\n    }\n\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Getmore must run on the same server operation began on')\n      );\n    }\n    server.getMore(this.ns, this.cursorId, this.options, callback);\n  }\n}\n\ndefineAspects(GetMoreOperation, [Aspect.READ_OPERATION, Aspect.CURSOR_ITERATING]);\n"]},"metadata":{},"sourceType":"script"}