{"ast":null,"code":"const exec = require('child_process').exec;\nconst tree = require('./tree');\nconst utils = require('./utils');\nvar hasPS = true;\n\n// discover if the OS has `ps`, and therefore can use psTree\nexec('ps', error => {\n  module.exports.hasPS = hasPS = !error;\n});\nmodule.exports = function main(pid, callback) {\n  if (typeof pid === 'number') {\n    pid = pid.toString();\n  }\n  if (hasPS && !process.env.NO_PS) {\n    return tree(pid, callback);\n  }\n  utils.getStat().then(utils.tree).then(tree => utils.pidsForTree(tree, pid)).then(res => callback(null, res.map(p => p.PID))).catch(error => callback(error));\n};\nif (!module.parent) {\n  module.exports(process.argv[2], (e, pids) => console.log(pids));\n}\nmodule.exports.hasPS = hasPS;","map":{"version":3,"names":["exec","require","tree","utils","hasPS","error","module","exports","main","pid","callback","toString","process","env","NO_PS","getStat","then","pidsForTree","res","map","p","PID","catch","parent","argv","e","pids","console","log"],"sources":["C:/Users/789bet/node_modules/pstree.remy/lib/index.js"],"sourcesContent":["const exec = require('child_process').exec;\nconst tree = require('./tree');\nconst utils = require('./utils');\nvar hasPS = true;\n\n// discover if the OS has `ps`, and therefore can use psTree\nexec('ps', (error) => {\n  module.exports.hasPS = hasPS = !error;\n});\n\nmodule.exports = function main(pid, callback) {\n  if (typeof pid === 'number') {\n    pid = pid.toString();\n  }\n\n  if (hasPS && !process.env.NO_PS) {\n    return tree(pid, callback);\n  }\n\n  utils\n    .getStat()\n    .then(utils.tree)\n    .then((tree) => utils.pidsForTree(tree, pid))\n    .then((res) =>\n      callback(\n        null,\n        res.map((p) => p.PID)\n      )\n    )\n    .catch((error) => callback(error));\n};\n\nif (!module.parent) {\n  module.exports(process.argv[2], (e, pids) => console.log(pids));\n}\n\nmodule.exports.hasPS = hasPS;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC,CAACD,IAAI;AAC1C,MAAME,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIG,KAAK,GAAG,IAAI;;AAEhB;AACAJ,IAAI,CAAC,IAAI,EAAGK,KAAK,IAAK;EACpBC,MAAM,CAACC,OAAO,CAACH,KAAK,GAAGA,KAAK,GAAG,CAACC,KAAK;AACvC,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,GAAG,EAAEC,QAAQ,EAAE;EAC5C,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAGA,GAAG,CAACE,QAAQ,EAAE;EACtB;EAEA,IAAIP,KAAK,IAAI,CAACQ,OAAO,CAACC,GAAG,CAACC,KAAK,EAAE;IAC/B,OAAOZ,IAAI,CAACO,GAAG,EAAEC,QAAQ,CAAC;EAC5B;EAEAP,KAAK,CACFY,OAAO,EAAE,CACTC,IAAI,CAACb,KAAK,CAACD,IAAI,CAAC,CAChBc,IAAI,CAAEd,IAAI,IAAKC,KAAK,CAACc,WAAW,CAACf,IAAI,EAAEO,GAAG,CAAC,CAAC,CAC5CO,IAAI,CAAEE,GAAG,IACRR,QAAQ,CACN,IAAI,EACJQ,GAAG,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,CAAC,CACtB,CACF,CACAC,KAAK,CAAEjB,KAAK,IAAKK,QAAQ,CAACL,KAAK,CAAC,CAAC;AACtC,CAAC;AAED,IAAI,CAACC,MAAM,CAACiB,MAAM,EAAE;EAClBjB,MAAM,CAACC,OAAO,CAACK,OAAO,CAACY,IAAI,CAAC,CAAC,CAAC,EAAE,CAACC,CAAC,EAAEC,IAAI,KAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;AACjE;AAEApB,MAAM,CAACC,OAAO,CAACH,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script"}