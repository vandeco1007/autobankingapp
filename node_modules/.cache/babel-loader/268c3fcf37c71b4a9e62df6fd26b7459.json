{"ast":null,"code":"var waitForElm=function waitForElm(selector){return new Promise(function(resolve){if(document.querySelector(selector)){return resolve(document.querySelector(selector));}var observer=new MutationObserver(function(mutations){if(document.querySelector(selector)){resolve(document.querySelector(selector));observer.disconnect();}});observer.observe(document.body,{childList:true,subtree:true});});};export default waitForElm;","map":{"version":3,"names":["waitForElm","selector","Promise","resolve","document","querySelector","observer","MutationObserver","mutations","disconnect","observe","body","childList","subtree"],"sources":["C:/Users/789bet/Desktop/toolxk/vcb/src/middlewares/waitForElm.js"],"sourcesContent":["const waitForElm = function (selector) {\r\n    return new Promise(resolve => {\r\n        if (document.querySelector(selector)) {\r\n            return resolve(document.querySelector(selector));\r\n        }\r\n  \r\n        const observer = new MutationObserver(mutations => {\r\n            if (document.querySelector(selector)) {\r\n                resolve(document.querySelector(selector));\r\n                observer.disconnect();\r\n            }\r\n        });\r\n  \r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    });\r\n  }\r\n\r\n  export default waitForElm;"],"mappings":"AAAA,GAAMA,WAAU,CAAG,QAAbA,WAAU,CAAaC,QAAQ,CAAE,CACnC,MAAO,IAAIC,QAAO,CAAC,SAAAC,OAAO,CAAI,CAC1B,GAAIC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAE,CAClC,MAAOE,QAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CACpD,CAEA,GAAMK,SAAQ,CAAG,GAAIC,iBAAgB,CAAC,SAAAC,SAAS,CAAI,CAC/C,GAAIJ,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAE,CAClCE,OAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CACzCK,QAAQ,CAACG,UAAU,EAAE,CACzB,CACJ,CAAC,CAAC,CAEFH,QAAQ,CAACI,OAAO,CAACN,QAAQ,CAACO,IAAI,CAAE,CAC5BC,SAAS,CAAE,IAAI,CACfC,OAAO,CAAE,IACb,CAAC,CAAC,CACN,CAAC,CAAC,CACJ,CAAC,CAED,cAAeb,WAAU"},"metadata":{},"sourceType":"module"}